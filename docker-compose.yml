version: "3.7"

services:
  test-authorizer-application:
    image: 'test-authorizer-spring-boot-mysql:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: application
    depends_on:
      test-authorizer-mysql:
        condition: service_healthy
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:${MYSQL_DATABASE_PORT}/${MYSQL_DATABASE}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect  # FIXME MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
      SPRING_DATASOURCE_PASSWORD:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update      
    ports:
#      - ${LOCAL_PORT}:${DOCKER_PORT}
      - "8025:8080"
    env_file:
      - .env.docker
    networks:
      - springboot-mysql-network

  test-authorizer-mysql:
    image: mysql:5.7
    hostname: mysql
    container_name: mysql
    restart: always
    ports:
      - "3306:${MYSQL_DATABASE_PORT}"
#      - "3306:3306"
    environment:
      MYSQL_DATABASE: miniautorizador
      MYSQL_ROOT_PASSWORD:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
#    volumes:
#      - type: volume
#        source: mysql-data
#       target: /var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s
#volumes:
#  mysql-data:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network      
    driver: bridge

  # mongo:
  #   image: mongo:4.2
  #   hostname: mongo
  #   container_name: mongo
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_DATABASE: miniautorizador
  #     MONGO_INITDB_ROOT_USERNAME: user
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   volumes:
  #     - ./scripts/init.js:/docker-entrypoint-initdb.d/init.js:ro